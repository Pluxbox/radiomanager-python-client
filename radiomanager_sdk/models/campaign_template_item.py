# coding: utf-8

"""
    RadioManager

    RadioManager  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@pluxbox.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class CampaignTemplateItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'model_type_id': 'int',
        'external_id': 'str',
        'field_values': 'object',
        'title': 'str',
        'duration': 'int',
        'recommended': 'bool',
        'static_start': 'bool',
        'deltas': 'object'
    }

    attribute_map = {
        'model_type_id': 'model_type_id',
        'external_id': 'external_id',
        'field_values': 'field_values',
        'title': 'title',
        'duration': 'duration',
        'recommended': 'recommended',
        'static_start': 'static_start',
        'deltas': '_deltas'
    }

    def __init__(self, model_type_id=None, external_id=None, field_values=None, title=None, duration=None, recommended=None, static_start=None, deltas=None):  # noqa: E501
        """CampaignTemplateItem - a model defined in Swagger"""  # noqa: E501

        self._model_type_id = None
        self._external_id = None
        self._field_values = None
        self._title = None
        self._duration = None
        self._recommended = None
        self._static_start = None
        self._deltas = None
        self.discriminator = None

        if model_type_id is not None:
            self.model_type_id = model_type_id
        if external_id is not None:
            self.external_id = external_id
        if field_values is not None:
            self.field_values = field_values
        if title is not None:
            self.title = title
        if duration is not None:
            self.duration = duration
        if recommended is not None:
            self.recommended = recommended
        if static_start is not None:
            self.static_start = static_start
        if deltas is not None:
            self.deltas = deltas

    @property
    def model_type_id(self):
        """Gets the model_type_id of this CampaignTemplateItem.  # noqa: E501


        :return: The model_type_id of this CampaignTemplateItem.  # noqa: E501
        :rtype: int
        """
        return self._model_type_id

    @model_type_id.setter
    def model_type_id(self, model_type_id):
        """Sets the model_type_id of this CampaignTemplateItem.


        :param model_type_id: The model_type_id of this CampaignTemplateItem.  # noqa: E501
        :type: int
        """

        self._model_type_id = model_type_id

    @property
    def external_id(self):
        """Gets the external_id of this CampaignTemplateItem.  # noqa: E501


        :return: The external_id of this CampaignTemplateItem.  # noqa: E501
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this CampaignTemplateItem.


        :param external_id: The external_id of this CampaignTemplateItem.  # noqa: E501
        :type: str
        """

        self._external_id = external_id

    @property
    def field_values(self):
        """Gets the field_values of this CampaignTemplateItem.  # noqa: E501


        :return: The field_values of this CampaignTemplateItem.  # noqa: E501
        :rtype: object
        """
        return self._field_values

    @field_values.setter
    def field_values(self, field_values):
        """Sets the field_values of this CampaignTemplateItem.


        :param field_values: The field_values of this CampaignTemplateItem.  # noqa: E501
        :type: object
        """

        self._field_values = field_values

    @property
    def title(self):
        """Gets the title of this CampaignTemplateItem.  # noqa: E501


        :return: The title of this CampaignTemplateItem.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CampaignTemplateItem.


        :param title: The title of this CampaignTemplateItem.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def duration(self):
        """Gets the duration of this CampaignTemplateItem.  # noqa: E501


        :return: The duration of this CampaignTemplateItem.  # noqa: E501
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this CampaignTemplateItem.


        :param duration: The duration of this CampaignTemplateItem.  # noqa: E501
        :type: int
        """

        self._duration = duration

    @property
    def recommended(self):
        """Gets the recommended of this CampaignTemplateItem.  # noqa: E501


        :return: The recommended of this CampaignTemplateItem.  # noqa: E501
        :rtype: bool
        """
        return self._recommended

    @recommended.setter
    def recommended(self, recommended):
        """Sets the recommended of this CampaignTemplateItem.


        :param recommended: The recommended of this CampaignTemplateItem.  # noqa: E501
        :type: bool
        """

        self._recommended = recommended

    @property
    def static_start(self):
        """Gets the static_start of this CampaignTemplateItem.  # noqa: E501


        :return: The static_start of this CampaignTemplateItem.  # noqa: E501
        :rtype: bool
        """
        return self._static_start

    @static_start.setter
    def static_start(self, static_start):
        """Sets the static_start of this CampaignTemplateItem.


        :param static_start: The static_start of this CampaignTemplateItem.  # noqa: E501
        :type: bool
        """

        self._static_start = static_start

    @property
    def deltas(self):
        """Gets the deltas of this CampaignTemplateItem.  # noqa: E501


        :return: The deltas of this CampaignTemplateItem.  # noqa: E501
        :rtype: object
        """
        return self._deltas

    @deltas.setter
    def deltas(self, deltas):
        """Sets the deltas of this CampaignTemplateItem.


        :param deltas: The deltas of this CampaignTemplateItem.  # noqa: E501
        :type: object
        """

        self._deltas = deltas

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CampaignTemplateItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
